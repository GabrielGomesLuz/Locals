// <auto-generated />
using System;
using Locals.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Locals.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230628201407_ImagensParaCarrossel")]
    partial class ImagensParaCarrossel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Locals.Models.CarrinhoReservaImovel", b =>
                {
                    b.Property<int>("CarrinhoReservaImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarrinhoReservaImovelId"));

                    b.Property<string>("CarrinhoReservaId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraReservado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImovelId")
                        .HasColumnType("int");

                    b.HasKey("CarrinhoReservaImovelId");

                    b.HasIndex("ImovelId");

                    b.ToTable("CarrinhoReservaItens");
                });

            modelBuilder.Entity("Locals.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("CategoriaNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Locals.Models.ImagemImovel", b =>
                {
                    b.Property<int>("ImagemImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagemImovelId"));

                    b.Property<string>("CaminhoImagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.HasKey("ImagemImovelId");

                    b.HasIndex("ImovelId");

                    b.ToTable("ImagensImovel");
                });

            modelBuilder.Entity("Locals.Models.Imovel", b =>
                {
                    b.Property<int>("ImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImovelId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoCurta")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescricaoDetalhada")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("ImagemThumbnailUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsImovelDestaque")
                        .HasColumnType("bit");

                    b.Property<string>("NomeImovel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ImovelId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("Locals.Models.CarrinhoReservaImovel", b =>
                {
                    b.HasOne("Locals.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId");

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("Locals.Models.ImagemImovel", b =>
                {
                    b.HasOne("Locals.Models.Imovel", "Imovel")
                        .WithMany("ImagemImoveis")
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("Locals.Models.Imovel", b =>
                {
                    b.HasOne("Locals.Models.Categoria", "Categoria")
                        .WithMany("Imoveis")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Locals.Models.Categoria", b =>
                {
                    b.Navigation("Imoveis");
                });

            modelBuilder.Entity("Locals.Models.Imovel", b =>
                {
                    b.Navigation("ImagemImoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
